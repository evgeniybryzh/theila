syntax = "proto3";
package management;

option go_package = "github.com/talos-systems/theila/api/rpc";

import "common/theila.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message UpgradeInfoResponse {
  // FromVersion is the lowest detected Kubernetes version.
  string from_version = 1;
}

service ManagementService {
  rpc UpgradeInfo(google.protobuf.Empty) returns (UpgradeInfoResponse);
}

message UpgradeK8sSpec {
  // K8s version to upgrade from.
  string from_version = 1;
  // K8s version to upgrade to.
  string to_version = 2;
  // Context to use.
  common.Context context = 3;
}

// Maps the task spec into task status spec.
message TaskStateSpec {
  // StatusID keeps the id for the current task status.
  string status_id = 4;
}

message TaskStatusSpec {
  enum Phase {
    FAILED = 0;
    RUNNING = 1;
    COMPLETE = 2;
  }
  // Upgrade task state.
  Phase phase = 1;
  // Progress represents the task progress [0,1].
  float progress = 2;
  // Failure reason.
  string error = 3;
  // K8s version to upgrade from.
  string from_version = 4;
  // K8s version to upgrade to.
  string to_version = 5;
  // FinishedAt is when the task either failed or completed.
  google.protobuf.Timestamp finished_at = 6;
}

message TaskLogSpec {
  // Line represents a single log line.
  string line = 1;
}

message KubernetesVersionSpec {
  // Version kubernetes version.
  string version = 1;
}
